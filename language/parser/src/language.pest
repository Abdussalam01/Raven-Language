element = _{ SOI ~ (structure | function)* ~ EOI }

WHITESPACE = _{ (" " | "\n" | "\r" | "\t")+ }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

ident = { ASCII_ALPHANUMERIC+ }

public = { "pub" }
static_mod = { "static" }
extern_mod = { "extern" }
modifiers = { public? ~ static_mod? ~ extern_mod? }

structure = { "struct" ~ ident ~ "{" ~ (struct_field|function)* ~ "}"}
struct_field = { modifiers ~ field ~ ";" }

field = { ident ~ ":" ~ ident }
fields = { (field ~ ",")* ~ field? }
return_type = _{ "->" ~ ident }
function = { modifiers ~ "fn" ~ ident ~ "(" ~ fields ~ ")" ~ return_type? ~ code_block }

code_block = { "{" ~ line* ~ "}" }

line = _{ returning? ~ expression ~ ";" }
expression = { term ~ effect* }

// Wrapped for some parsing cases
wrapped_effect = { effect }

effect = _{ method | math | index | "(" ~ effect ~ ")" | term }
term = _{ string | number | assign | ident | term_math }

equals = { "=" }
index = { "[" ~ effect ~ (".." ~ equals? ~ effect)? ~ "]"}
assign = { "let" ~ ident ~ "=" ~ effect }
returning = { "return" }

method = { "."? ~ ident ~ arguments }

arguments = { "(" ~ (expression ~ ",")* ~ expression? ~ ")" }

negative = @{"-"}

string = @{ "\"" ~ ANY+ ~ "\"" }
digits = @{ ASCII_DIGIT+ }
integer = @{ negative? ~ digits }
float = @{ negative? ~ digits ~ "." ~ digits }

number = _{ integer | float }
addition = { "+" }
subtraction = { "-" }
multiplication = { "*" }
division = { "/" }

negate = { subtraction ~ number }
operation = _{ addition | subtraction | multiplication | division }
math = { operation ~ wrapped_effect }
term_math = { (negate) ~ term }